// User
App\User::create(['name' => 'Jaksa Malisic', 'email' => 'jaksa.malisic@gmail.com', 'password' => bcrypt('thalionQWER')])

// Admin
App\Admin::create(['name' => 'Jaksa Malisic', 'email' => 'jaksa.malisic@gmail.com', 'password' => bcrypt('thalionQWER')])

// Destination
Destination::create(['naziv' => 'Beograd', 'ICAO' => 'LYBE'])
Destination::create(['naziv' => 'Pariz', 'ICAO' => 'CSBN'])
Destination::create(['naziv' => 'Cikago', 'ICAO' => 'CHY'])
Destination::create(['naziv' => 'Peking', 'ICAO' => 'PAT'])
Destination::create(['naziv' => 'Moskva', 'ICAO' => 'MOW'])


FlightStaff::create(['flight_id' => ['1', '3'], 'staffs_id' => ['1', '1']])

foreach ([1, 3] as $update) FlightStaff::create(['flight_id' => 1, 'staffs_id' => $update])

Client::create(['naziv' => 'RRStud']);


// Popuni polja flights.poletanje, sletanje, airplanes_id

$let = new Flight;
$let -> poletanje = request('poletanje');
$let -> sletanje = request('sletanje');
$let -> airplanes_id = request('airplanes_id');
$let -> save();

// Napravi klijente
$br_klijenata = count(request('client_naziv'));
foreach (request('client_naziv') as $check) {
  if (\App\Client::where('naziv', $check)->exists()) {
    $id = \App\Client::where('naziv', $check)->get()->pluck('id')[0];
    $client = \App\Client::find($id);
  } else {
    if ($check instanceof Collection) {
      foreach ($check as $client) {
      \App\Client::create([
                      'naziv' => $client
                      ]);
      }
    } else {
      \App\Client::create([
                      'naziv' => $check
                      ]);
    }

  }
}



// Napravi rutu
$ruta = new \App\FlightRoute;
$ruta -> polazna_dest = request('polazna_dest');
$ruta -> dolazna_dest = request('dolazna_dest');
$ruta -> save(); // BUG: ovde mora da postoji pivot tabela let.ruta zato sto ista ruta moze da se pojavi u dva leta

// Nadji poslednju rutu i dodaj je poslenjem letu
$ruta = \App\FlightRoute::orderBy('created_at', 'DESC')->first()->id; // BUG: tako da ovde mora da ide where id leta = id rute
$let = Flight::orderBy('created_at', 'DESC')->first();
$let -> flight_routes_id = $ruta;
$let -> save();

// Sastavi posadu
foreach (request('staffs_id') as $staff) {
  \App\FlightStaff::create([
    'staffs_id' => \App\Staff::where('ime_prezime', $staff)->pluck('id')[0],
    'flight_id' => $let->id,
  ]);
}

// Nadji poslednju posadu i poslednji let i dodaj mu id posade
$posada = \App\FlightStaff::orderBy('created_at', 'DESC')->first()->id;
$let = Flight::orderBy('created_at', 'DESC')->first();
$let -> flight_staffs_id = $posada;
$let -> save();

// Nadji pravog klijenta
foreach (request('client_naziv') as $check) {
  $clients[]= \App\Client::where('naziv', $check)->get()[0];
}


// $let = Flight::orderBy('created_at', 'DESC')->first();
// $let -> client_id = \App\Client::orderBy('created_at', 'DESC')->first()->id;
// $let -> save();

// Dodaj prave klijente u pivot tabelu

    foreach ($clients as $client) {
      $clientFlight = new \App\ClientFlight;
      $clientFlight -> client_id = $client->id; // BUG: ovo se uopste ne exe
      $clientFlight -> flight_id = $let->id;
      $clientFlight -> save();
    }
